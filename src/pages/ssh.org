#+begin_html
---
title: ssh
tags: OpenSSH ssh
date: <2014-01-04 Sat>
---
#+end_html

* ~/.ssh/config

** 1個目以降の接続が速くていい設定

これ便利だからずっと使っている。
#+BEGIN_SRC 
Host *
     ControlMaster auto
     ControlPath ~/.ssh/connections/%r_%h_%p
     ServerAliveInterval 60
#+END_SRC


#+BEGIN_SRC 
IdentityFile ~/.ssh/なんかの.key
IdentitiesOnly yes
#+END_SRC

* known_hosts
** To ignore
#+BEGIN_SRC sh
ssh -o StrictHostKeychecking=no hostname
#+END_SRC

#+BEGIN_SRC config
Host 192.168.0.*
    StrictHostKeyChecking no
    UserKnownHostsFile=/dev/null
#+END_SRC

http://superuser.com/questions/19563/how-do-i-skip-the-known-host-question-the-first-time-i-connect-to-a-machine-vi

** 更新
From: http://qiita.com/kawaz/items/20983ec286088a1ae5c7

#+BEGIN_SRC sh
host="target-hostname"
ssh-keygen -R $host
ssh-keyscan -H $host >> ~/.ssh/known_hosts
#+END_SRC

* 暗号方式

最近はいろんな暗号が使える。

** RSA
1024ビットはもう古い。

** dsa
離散対数のやつ

** ecdsa
楕円曲線暗号

** ed25519
F_{2^{255}-19}という素体の上のある Twested Edwards 曲線という楕円曲線を使う。

-x^2+y^2 = 1 - (121665/121666)x^2y^2

[[https://en.wikipedia.org/wiki/EdDSA][EdDSA - Wikipedia, the free encyclopedia]]

[[https://en.wikipedia.org/wiki/Twisted_Edwards_curve][Twisted Edwards curve (Wikipedia)]]
はa,dというパラメタで定義方程式が
ax^2+y^2 = 1 + dx^2y^2
である平面曲線。

x^2+y^2 = 1 + dx^2y^2
が通常のEdwards曲線
dは0,1でない。

ただし、標数は2でないとする。

* 鍵をdecodeしてみる
#+BEGIN_SRC sh
ssh-keygen -f ~/.ssh/id_ecdsa.pub -e | grep -v Comment | grep -v -- ---- | tr -d '\n' | base64 -D | openssl asn1parse -inform DER
#+END_SRC


RFC4716
#+BEGIN_SRC python
import base64
import struct
b = 256
by = b//8
openssh_pubkey = open('.ssh/id_ed25519.pub').read()
type, key_string, comment = openssh_pubkey.split()
data = base64.b64decode(key_string)
int_len = 4
str_len = struct.unpack('>I', data[:int_len])[0]
data[int_len:int_len+str_len] # type is here
o = int_len+str_len
key_main = data[o:999]
x = data[o:o+by//2]
y = data[o+by//2:o+by]
(int.from_bytes(x, byteorder='little'), int.from_bytes(y, byteorder='little'))
#+END_SRC

* portforwarding
** -L
ローカルのポートをリモートのポートにつなぐ。

例
ローカルのポート 63128 にアクセスすると、host1 から見て localhost の 3128 に飛ぶ。
#+BEGIN_SRC sh
ssh host1 -L 63128:localhost:3128
#+END_SRC

** -R
リモートのホストのポートをローカルポートへ持ってくる。

例。host1から見て host2のポート8888 にアクセスすると、ローカルの 12345 を叩いてくださる。
#+BEGIN_SRC sh
ssh host1 -R 8888:host2:12345
#+END_SRC
